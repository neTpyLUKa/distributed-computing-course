version: "3"

services:

  postgres:
    image: postgres
    environment:
      - POSTGRES_USER=${SQL_USER}
      - POSTGRES_PASSWORD=${SQL_PASSWORD}
      - POSTGRES_DB=${SQL_DATABASE}

  onlineshop:
    env_file:
      - .env
    build:
      context: store
      dockerfile: Dockerfile
    command: sh -c "utils/wait-for-it.sh auth:$AUTH_PORT &&
                    python manage.py makemigrations &&
                    python manage.py migrate &&
                    python manage.py runserver 0.0.0.0:$STORE_PORT"

    depends_on:
      - postgres
      - auth
    ports:
      - ${STORE_PORT}:${STORE_PORT}
    volumes:
      - ./store/:/onlineshop

  auth:
    env_file:
      - .env
    build:
      context: simple_auth
      dockerfile: Dockerfile
    command: sh -c "utils/wait-for-it.sh postgres:$SQL_PORT &&
                    python manage.py makemigrations &&
                    python manage.py migrate &&
                    python manage.py runserver 0.0.0.0:$AUTH_PORT"

    depends_on:
      - postgres
    ports:
      - ${AUTH_PORT}:${AUTH_PORT}
    volumes:
      - ./simple_auth/:/auth

  rabbitmq:
    image: rabbitmq:management-alpine
    volumes:
      - rabbit_data:/var/lib/rabbitmq

    ports:
      - ${RABBIT_PORT}:${RABBIT_PORT}
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
      - RABBITMQ_DEFAULT_VHOST=${RABBITMQ_VHOST}
        # - R#BBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit channel_max 0

  notification_center:
    env_file:
      - .env
    build: ./notification_center
volumes:
  rabbit_data:
